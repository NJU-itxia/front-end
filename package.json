{
  "name": "itxia-front-end",
  "version": "1.0.0",
  "scripts": {
    "start": "node devServer.js",
    "lint": "eslint src"
  },
  "devDependencies": {
    "babel-core": "^6.14.0",
    "babel-eslint": "^5.0.4",
    "babel-loader": "^6.2.5",
    "babel-preset-es2015": "^6.14.0",
    "babel-preset-react": "^6.11.1",
    "babel-preset-stage-0": "^6.5.0",
    "css-loader": "^0.25.0",
    "eslint": "^1.10.3",
    "eslint-plugin-react": "^3.16.1",
    "extract-text-webpack-plugin": "^1.0.1",
    "file-loader": "^0.9.0",
    "less": "^2.7.1",
    "less-loader": "^2.2.3",
    "react-hot-loader": "^1.3.0",
    "redux-devtools": "^3.3.1",
    "style-loader": "^0.13.1",
    "webpack": "^1.13.2",
    "webpack-dashboard": "^0.1.8",
    "webpack-dev-server": "^1.16.2"
  },
  "dependencies": {
    "bootstrap": "^3.3.7",
    "history": "^1.17.0",
    "jquery": "^2.2.4",
    "moment": "^2.16.0",
    "react": "^0.14.8",
    "react-bootstrap": "^0.28.5",
    "react-cookie": "^0.4.8",
    "react-dom": "^0.14.8",
    "react-redux": "^4.4.5",
    "react-router": "^3.0.0",
    "react-router-bootstrap": "^0.19.3",
    "react-router-redux": "^4.0.5",
    "redux": "^3.5.2"
  },
  "description": "* ``VirtualBox``提供了虚拟机底层的实现，以及GUI管理界面（虽有VBoxManage命令行，但并不好用）\r * ``Vagrant``提供了更简单的命令行对VirtualBox进行操作，使用Vagrantfile文件来配置虚拟机，以及将各系统打包成.box文件进行分发\r * 因此，Vagrant依赖于VirtualBox\r * 虚拟机里运行的系统叫Guest OS，物理机上叫Host OS，两者之间相互隔离，只有两方面可以互通：\r   * 网络互通：通过Port Forwarding实现,同时Guest OS里的程序需要监听``0.0.0.0``，而非``127.0.0.1``。因为前后端分离，所以需要在2个端口上互通。\r   * 文件系统互通：通过Shared Folder实现，即Guest OS里的``/vagrant``和Host OS里的box所在文件夹是一样的，代码就放在这个文件夹里即可",
  "main": "devServer.js",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/NJU-itxia/front-end.git"
  },
  "author": "",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/NJU-itxia/front-end/issues"
  },
  "homepage": "https://github.com/NJU-itxia/front-end#readme"
}
